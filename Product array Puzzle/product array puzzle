Given an array nums[] of size n, construct a Product Array P (of same size n) 
such that P[i] is equal to the product of all the elements of nums except nums[i].

Example 1:

Input:
n = 5
nums[] = {10, 3, 5, 6, 2}
Output:
180 600 360 300 900
Explanation: 
For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900

solution....................................

vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        //code here
        long long int x=1;
        int k=0;
        vector<long long int> v;
        for(int i=0;i<n;i++){
            if(nums[i]==0){
               k++; 
            }
            else if(nums[i]!=0){
                x=nums[i]*x;
            }
        }
        for(int i=0;i<n;i++){
            long long t=x;
            if(k>1){
                v.push_back(0);
            }
            if(k==1){
                if(nums[i]==0){
                    v.push_back(t);
                }
                else{
                    v.push_back(0);
                }
            }
            else if(k==0){
                v.push_back(t/nums[i]);
            }
        }
        return v;
    }
};
